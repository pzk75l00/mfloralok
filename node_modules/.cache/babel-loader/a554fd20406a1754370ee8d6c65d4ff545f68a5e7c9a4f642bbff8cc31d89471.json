{"ast":null,"code":"var _jsxFileName = \"C:\\\\Proyectos\\\\Sistema\\\\mfloralok\\\\src\\\\components\\\\ReportesView.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Bar, Pie, Line } from 'react-chartjs-2';\nimport { Chart, CategoryScale, LinearScale, BarElement, ArcElement, PointElement, LineElement, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale, LinearScale, BarElement, ArcElement, PointElement, LineElement, Tooltip, Legend);\nconst ReportesView = ({\n  plants,\n  sales,\n  purchases\n}) => {\n  _s();\n  // --- Ventas y compras por mes ---\n  const months = Array.from({\n    length: 12\n  }, (_, i) => new Date(0, i).toLocaleString('es-AR', {\n    month: 'short'\n  }));\n  const salesByMonth = Array(12).fill(0);\n  const purchasesByMonth = Array(12).fill(0);\n  sales.forEach(sale => {\n    if (!sale.date) return;\n    const d = new Date(sale.date);\n    salesByMonth[d.getMonth()] += sale.total || 0;\n  });\n  purchases.forEach(purchase => {\n    if (!purchase.date) return;\n    const d = new Date(purchase.date);\n    purchasesByMonth[d.getMonth()] += purchase.purchasePrice * purchase.quantity || 0;\n  });\n\n  // --- Stock por tipo de planta ---\n  const stockByType = {};\n  plants.forEach(plant => {\n    stockByType[plant.type] = (stockByType[plant.type] || 0) + (plant.stock || 0);\n  });\n  const typeLabels = Object.keys(stockByType);\n  const typeData = Object.values(stockByType);\n\n  // --- Ranking de plantas por lugar ---\n  const [selectedLocation, setSelectedLocation] = useState('');\n  // Obtener todos los lugares Ãºnicos\n  const locations = Array.from(new Set(sales.map(s => s.location).filter(Boolean)));\n  // Filtrar ventas por lugar seleccionado\n  const salesByLocation = selectedLocation ? sales.filter(s => s.location === selectedLocation) : sales;\n  // Contar ventas por planta en ese lugar\n  const plantSalesCount = {};\n  salesByLocation.forEach(sale => {\n    if (!sale.plantId) return;\n    plantSalesCount[sale.plantId] = (plantSalesCount[sale.plantId] || 0) + (sale.quantity || 0);\n  });\n  // Top plantas vendidas en ese lugar\n  const topPlantSales = Object.entries(plantSalesCount).map(([plantId, qty]) => {\n    var _plants$find;\n    return {\n      name: ((_plants$find = plants.find(p => p.id === Number(plantId))) === null || _plants$find === void 0 ? void 0 : _plants$find.name) || 'Planta eliminada',\n      qty\n    };\n  }).sort((a, b) => b.qty - a.qty).slice(0, 10);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-gray-800\",\n      children: \"Reportes y Gr\\xE1ficos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold mb-2\",\n          children: \"Ventas vs Compras por Mes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          data: {\n            labels: months,\n            datasets: [{\n              label: 'Ventas',\n              data: salesByMonth,\n              backgroundColor: 'rgba(34,197,94,0.7)'\n            }, {\n              label: 'Compras',\n              data: purchasesByMonth,\n              backgroundColor: 'rgba(239,68,68,0.7)'\n            }]\n          },\n          options: {\n            responsive: true,\n            plugins: {\n              legend: {\n                position: 'top'\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold mb-2\",\n          children: \"Stock por Tipo de Planta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pie, {\n          data: {\n            labels: typeLabels,\n            datasets: [{\n              data: typeData,\n              backgroundColor: ['#22c55e', '#f59e42', '#38bdf8', '#a78bfa', '#f43f5e']\n            }]\n          },\n          options: {\n            responsive: true,\n            plugins: {\n              legend: {\n                position: 'bottom'\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow p-4 md:col-span-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold mb-2\",\n          children: \"Evoluci\\xF3n de Ventas Mensuales\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          data: {\n            labels: months,\n            datasets: [{\n              label: 'Ventas',\n              data: salesByMonth,\n              borderColor: '#22c55e',\n              backgroundColor: 'rgba(34,197,94,0.2)',\n              fill: true\n            }]\n          },\n          options: {\n            responsive: true,\n            plugins: {\n              legend: {\n                position: 'top'\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow p-4 md:col-span-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold mb-2\",\n          children: \"Plantas m\\xE1s vendidas por lugar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2 mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"font-medium\",\n            children: \"Lugar:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedLocation,\n            onChange: e => setSelectedLocation(e.target.value),\n            className: \"border rounded px-2 py-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Todos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), locations.map(loc => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: loc,\n              children: loc\n            }, loc, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), topPlantSales.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"min-w-full text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-left px-2 py-1\",\n                children: \"Planta\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-right px-2 py-1\",\n                children: \"Cantidad vendida\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: topPlantSales.map((item, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: idx === 0 ? 'font-bold text-green-700' : '',\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-2 py-1\",\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-2 py-1 text-right\",\n                children: item.qty\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 21\n              }, this)]\n            }, item.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: \"No hay ventas registradas en este lugar.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(ReportesView, \"VOGXRMAlEIdWBfjrm8yt6Tx3yIU=\");\n_c = ReportesView;\nexport default ReportesView;\nvar _c;\n$RefreshReg$(_c, \"ReportesView\");","map":{"version":3,"names":["React","useState","Bar","Pie","Line","Chart","CategoryScale","LinearScale","BarElement","ArcElement","PointElement","LineElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","ReportesView","plants","sales","purchases","_s","months","Array","from","length","_","i","Date","toLocaleString","month","salesByMonth","fill","purchasesByMonth","forEach","sale","date","d","getMonth","total","purchase","purchasePrice","quantity","stockByType","plant","type","stock","typeLabels","Object","keys","typeData","values","selectedLocation","setSelectedLocation","locations","Set","map","s","location","filter","Boolean","salesByLocation","plantSalesCount","plantId","topPlantSales","entries","qty","_plants$find","name","find","p","id","Number","sort","a","b","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","data","labels","datasets","label","backgroundColor","options","responsive","plugins","legend","position","borderColor","value","onChange","e","target","loc","item","idx","_c","$RefreshReg$"],"sources":["C:/Proyectos/Sistema/mfloralok/src/components/ReportesView.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Bar, Pie, Line } from 'react-chartjs-2';\r\nimport { Chart, CategoryScale, LinearScale, BarElement, ArcElement, PointElement, LineElement, Tooltip, Legend } from 'chart.js';\r\n\r\nChart.register(CategoryScale, LinearScale, BarElement, ArcElement, PointElement, LineElement, Tooltip, Legend);\r\n\r\nconst ReportesView = ({ plants, sales, purchases }) => {\r\n  // --- Ventas y compras por mes ---\r\n  const months = Array.from({ length: 12 }, (_, i) => new Date(0, i).toLocaleString('es-AR', { month: 'short' }));\r\n  const salesByMonth = Array(12).fill(0);\r\n  const purchasesByMonth = Array(12).fill(0);\r\n\r\n  sales.forEach(sale => {\r\n    if (!sale.date) return;\r\n    const d = new Date(sale.date);\r\n    salesByMonth[d.getMonth()] += sale.total || 0;\r\n  });\r\n  purchases.forEach(purchase => {\r\n    if (!purchase.date) return;\r\n    const d = new Date(purchase.date);\r\n    purchasesByMonth[d.getMonth()] += (purchase.purchasePrice * purchase.quantity) || 0;\r\n  });\r\n\r\n  // --- Stock por tipo de planta ---\r\n  const stockByType = {};\r\n  plants.forEach(plant => {\r\n    stockByType[plant.type] = (stockByType[plant.type] || 0) + (plant.stock || 0);\r\n  });\r\n  const typeLabels = Object.keys(stockByType);\r\n  const typeData = Object.values(stockByType);\r\n\r\n  // --- Ranking de plantas por lugar ---\r\n  const [selectedLocation, setSelectedLocation] = useState('');\r\n  // Obtener todos los lugares Ãºnicos\r\n  const locations = Array.from(new Set(sales.map(s => s.location).filter(Boolean)));\r\n  // Filtrar ventas por lugar seleccionado\r\n  const salesByLocation = selectedLocation\r\n    ? sales.filter(s => s.location === selectedLocation)\r\n    : sales;\r\n  // Contar ventas por planta en ese lugar\r\n  const plantSalesCount = {};\r\n  salesByLocation.forEach(sale => {\r\n    if (!sale.plantId) return;\r\n    plantSalesCount[sale.plantId] = (plantSalesCount[sale.plantId] || 0) + (sale.quantity || 0);\r\n  });\r\n  // Top plantas vendidas en ese lugar\r\n  const topPlantSales = Object.entries(plantSalesCount)\r\n    .map(([plantId, qty]) => ({\r\n      name: plants.find(p => p.id === Number(plantId))?.name || 'Planta eliminada',\r\n      qty\r\n    }))\r\n    .sort((a, b) => b.qty - a.qty)\r\n    .slice(0, 10);\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      <h2 className=\"text-2xl font-bold text-gray-800\">Reportes y GrÃ¡ficos</h2>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\r\n        <div className=\"bg-white rounded-lg shadow p-4\">\r\n          <h3 className=\"font-semibold mb-2\">Ventas vs Compras por Mes</h3>\r\n          <Bar\r\n            data={{\r\n              labels: months,\r\n              datasets: [\r\n                { label: 'Ventas', data: salesByMonth, backgroundColor: 'rgba(34,197,94,0.7)' },\r\n                { label: 'Compras', data: purchasesByMonth, backgroundColor: 'rgba(239,68,68,0.7)' }\r\n              ]\r\n            }}\r\n            options={{ responsive: true, plugins: { legend: { position: 'top' } } }}\r\n          />\r\n        </div>\r\n        <div className=\"bg-white rounded-lg shadow p-4\">\r\n          <h3 className=\"font-semibold mb-2\">Stock por Tipo de Planta</h3>\r\n          <Pie\r\n            data={{\r\n              labels: typeLabels,\r\n              datasets: [\r\n                { data: typeData, backgroundColor: ['#22c55e', '#f59e42', '#38bdf8', '#a78bfa', '#f43f5e'] }\r\n              ]\r\n            }}\r\n            options={{ responsive: true, plugins: { legend: { position: 'bottom' } } }}\r\n          />\r\n        </div>\r\n        <div className=\"bg-white rounded-lg shadow p-4 md:col-span-2\">\r\n          <h3 className=\"font-semibold mb-2\">EvoluciÃ³n de Ventas Mensuales</h3>\r\n          <Line\r\n            data={{\r\n              labels: months,\r\n              datasets: [\r\n                { label: 'Ventas', data: salesByMonth, borderColor: '#22c55e', backgroundColor: 'rgba(34,197,94,0.2)', fill: true }\r\n              ]\r\n            }}\r\n            options={{ responsive: true, plugins: { legend: { position: 'top' } } }}\r\n          />\r\n        </div>\r\n        <div className=\"bg-white rounded-lg shadow p-4 md:col-span-2\">\r\n          <h3 className=\"font-semibold mb-2\">Plantas mÃ¡s vendidas por lugar</h3>\r\n          <div className=\"flex items-center gap-2 mb-4\">\r\n            <label className=\"font-medium\">Lugar:</label>\r\n            <select value={selectedLocation} onChange={e => setSelectedLocation(e.target.value)} className=\"border rounded px-2 py-1\">\r\n              <option value=\"\">Todos</option>\r\n              {locations.map(loc => (\r\n                <option key={loc} value={loc}>{loc}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          {topPlantSales.length > 0 ? (\r\n            <table className=\"min-w-full text-sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"text-left px-2 py-1\">Planta</th>\r\n                  <th className=\"text-right px-2 py-1\">Cantidad vendida</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {topPlantSales.map((item, idx) => (\r\n                  <tr key={item.name} className={idx === 0 ? 'font-bold text-green-700' : ''}>\r\n                    <td className=\"px-2 py-1\">{item.name}</td>\r\n                    <td className=\"px-2 py-1 text-right\">{item.qty}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n            <p className=\"text-gray-500\">No hay ventas registradas en este lugar.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportesView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}